{"ast":null,"code":"var _jsxFileName = \"/home/user/elzar games/wordle-games/src/components/Pages/WordG.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useWordle } from '../../hooks/useWordle';\nimport { Tile } from '../Tile';\nimport './WordG.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WordG = () => {\n  _s();\n  const {\n    word,\n    isLoading,\n    messsage,\n    guesses,\n    gameOver,\n    currentGuesses,\n    currentIndex,\n    getTileClass,\n    initializeGame\n  } = useWordle();\n  console.log(word);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"word-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Wordle Games\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 4\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [Array.from({\n        length: 6\n      }, (_, row) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: Array.from({\n          length: 5\n        }, (_, col) => {\n          const index = row * 5 + col;\n          const inputValue = guesses[row][col] || '';\n          const tileClass = currentIndex > row || gameOver ? getTileClass(inputValue, col, row) : '';\n          return /*#__PURE__*/_jsxDEV(Tile, {\n            index: index,\n            inputValue: inputValue,\n            tileClass: tileClass\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 10\n          }, this);\n        })\n      }, row, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"you-lost\",\n        children: [messsage && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'black'\n          },\n          children: [\"\\u041F\\u0440\\u0430\\u0432\\u0438\\u043B\\u044C\\u043D\\u043E\\u0435 \\u0441\\u043B\\u043E\\u0432\\u043E: \", word]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 7\n        }, this), gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: initializeGame,\n            children: \"\\u041D\\u0430\\u0447\\u0430\\u0442\\u044C \\u0437\\u0430\\u043D\\u043E\\u0432\\u043E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 3\n  }, this);\n};\n_s(WordG, \"9jRgu4TFW/FpD6T+x6OBBblAmtM=\", false, function () {\n  return [useWordle];\n});\n_c = WordG;\nexport default WordG;\nvar _c;\n$RefreshReg$(_c, \"WordG\");","map":{"version":3,"names":["React","useWordle","Tile","jsxDEV","_jsxDEV","WordG","_s","word","isLoading","messsage","guesses","gameOver","currentGuesses","currentIndex","getTileClass","initializeGame","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Array","from","length","_","row","col","index","inputValue","tileClass","style","color","onClick","_c","$RefreshReg$"],"sources":["/home/user/elzar games/wordle-games/src/components/Pages/WordG.tsx"],"sourcesContent":["import React from 'react'\nimport { useWordle } from '../../hooks/useWordle'\nimport { Tile } from '../Tile'\nimport './WordG.css'\n\nconst WordG = () => {\n\tconst {\n\t\tword,\n\t\tisLoading,\n\t\tmesssage,\n\t\tguesses,\n\t\tgameOver,\n\t\tcurrentGuesses,\n\t\tcurrentIndex,\n\t\tgetTileClass,\n\t\tinitializeGame\n\t} = useWordle()\n\tconsole.log(word)\n\n\treturn (\n\t\t<div className='word-container'>\n\t\t\t<h1>Wordle Games</h1>\n\t\t\t{isLoading ? (\n\t\t\t\t<p>Загрузка...</p>\n\t\t\t) : (\n\t\t\t\t<div>\n\t\t\t\t\t{Array.from({ length: 6 }, (_, row) => (\n\t\t\t\t\t\t<div key={row} className='row'>\n\t\t\t\t\t\t\t{Array.from({ length: 5 }, (_, col) => {\n\t\t\t\t\t\t\t\tconst index = row * 5 + col\n\t\t\t\t\t\t\t\tconst inputValue = guesses[row][col] || ''\n\t\t\t\t\t\t\t\tconst tileClass =\n\t\t\t\t\t\t\t\t\tcurrentIndex > row || gameOver\n\t\t\t\t\t\t\t\t\t\t? getTileClass(inputValue, col, row)\n\t\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<Tile\n\t\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\t\t\t\t\tinputValue={inputValue}\n\t\t\t\t\t\t\t\t\t\ttileClass={tileClass}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))}\n\t\t\t\t\t<div className=\"you-lost\">\n\n\t\t\t\t\t{messsage && (\n\t\t\t\t\t\t<p style={{ color: 'black' }}>Правильное слово: {word}</p>\n\t\t\t\t\t)}\n\t\t\t\t\t{gameOver && (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<button onClick={initializeGame}>Начать заново</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t)\n}\n\nexport default WordG\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,uBAAuB;AACjD,SAASC,IAAI,QAAQ,SAAS;AAC9B,OAAO,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM;IACLC,IAAI;IACJC,SAAS;IACTC,QAAQ;IACRC,OAAO;IACPC,QAAQ;IACRC,cAAc;IACdC,YAAY;IACZC,YAAY;IACZC;EACD,CAAC,GAAGd,SAAS,CAAC,CAAC;EACfe,OAAO,CAACC,GAAG,CAACV,IAAI,CAAC;EAEjB,oBACCH,OAAA;IAAKc,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC9Bf,OAAA;MAAAe,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACpBf,SAAS,gBACTJ,OAAA;MAAAe,QAAA,EAAG;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAElBnB,OAAA;MAAAe,QAAA,GACEK,KAAK,CAACC,IAAI,CAAC;QAAEC,MAAM,EAAE;MAAE,CAAC,EAAE,CAACC,CAAC,EAAEC,GAAG,kBACjCxB,OAAA;QAAec,SAAS,EAAC,KAAK;QAAAC,QAAA,EAC5BK,KAAK,CAACC,IAAI,CAAC;UAAEC,MAAM,EAAE;QAAE,CAAC,EAAE,CAACC,CAAC,EAAEE,GAAG,KAAK;UACtC,MAAMC,KAAK,GAAGF,GAAG,GAAG,CAAC,GAAGC,GAAG;UAC3B,MAAME,UAAU,GAAGrB,OAAO,CAACkB,GAAG,CAAC,CAACC,GAAG,CAAC,IAAI,EAAE;UAC1C,MAAMG,SAAS,GACdnB,YAAY,GAAGe,GAAG,IAAIjB,QAAQ,GAC3BG,YAAY,CAACiB,UAAU,EAAEF,GAAG,EAAED,GAAG,CAAC,GAClC,EAAE;UACN,oBACCxB,OAAA,CAACF,IAAI;YAEJ4B,KAAK,EAAEA,KAAM;YACbC,UAAU,EAAEA,UAAW;YACvBC,SAAS,EAAEA;UAAU,GAHhBF,KAAK;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAIV,CAAC;QAEJ,CAAC;MAAC,GAhBOK,GAAG;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAiBR,CACL,CAAC,eACFnB,OAAA;QAAKc,SAAS,EAAC,UAAU;QAAAC,QAAA,GAExBV,QAAQ,iBACRL,OAAA;UAAG6B,KAAK,EAAE;YAAEC,KAAK,EAAE;UAAQ,CAAE;UAAAf,QAAA,GAAC,+FAAkB,EAACZ,IAAI;QAAA;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CACzD,EACAZ,QAAQ,iBACRP,OAAA;UAAAe,QAAA,eACCf,OAAA;YAAQ+B,OAAO,EAAEpB,cAAe;YAAAI,QAAA,EAAC;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnD,CACL;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAER,CAAC;AAAAjB,EAAA,CAxDKD,KAAK;EAAA,QAWNJ,SAAS;AAAA;AAAAmC,EAAA,GAXR/B,KAAK;AA0DX,eAAeA,KAAK;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}